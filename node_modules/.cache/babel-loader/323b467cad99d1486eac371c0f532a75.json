{"ast":null,"code":"import _classCallCheck from \"C:\\\\React JS\\\\cards\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\React JS\\\\cards\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\React JS\\\\cards\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\React JS\\\\cards\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\React JS\\\\cards\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\React JS\\\\cards\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n\n    _this.upButton = function () {\n      fetch(\"https://deckofcardsapi.com/api/deck/\".concat(_this.state.deck_id, \"/draw/?count=1\")).then(function (response) {\n        return response.json();\n      });\n    };\n\n    _this.state = {\n      deck_id: '',\n      image: '',\n      value: '',\n      result: ''\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch('https://deckofcardsapi.com/api/deck/new/shuffle/?deck_count=1').then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        return _this2.setState({\n          deck_id: data.deck_id\n        });\n      }).then(this.drawCard);\n    }\n  }, {\n    key: \"render\",\n    // drawCard = () => { \n    //   fetch(`https://deckofcardsapi.com/api/deck/${this.state.deck_id}/draw/?count=1`)       \n    //   .then(response => response.json())       \n    //   .then(data => data.cards.map(card => {\n    //     switch (card.value) {\n    //     case '0': \n    //     card.value = '10';\n    //     break;\n    //     case 'ACE': \n    //     card.value = '11';\n    //     break;\n    //     case 'JACK': \n    //     card.value = '12';\n    //     break;\n    //     case 'QUEEN': \n    //     card.value = '13';\n    //     break;\n    //     case 'KING': \n    //     card.value = '14';\n    //     break;\n    //   } \n    //   this.setState({image:card.image, value:card.value})} ))\n    // }\n    // compareCards = (b) => {\n    //   var previousCard = this.state.value;\n    //   this.drawCard()\n    //   if(b === 'up') {\n    //     if (previousCard < this.state.value) this.setState({result:'win'})\n    //     else (this.setState({result:'lose'}))\n    //   } else {\n    //     if (previousCard > this.state.value) this.setState({result:'win'})\n    //     else (this.setState({result:'lose'}))\n    //   }\n    // }\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.upButton,\n        className: \"button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"Up\"), React.createElement(\"button\", {\n        className: \"button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"Down\"), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, this.state.result), React.createElement(\"img\", {\n        className: \"\",\n        src: this.state.image,\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["C:\\React JS\\cards\\src\\App.js"],"names":["React","Component","App","upButton","fetch","state","deck_id","then","response","json","image","value","result","data","setState","drawCard"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;;IAEMC,G;;;;;AACN,iBAAc;AAAA;;AAAA;;AACZ;;AADY,UAYdC,QAZc,GAYH,YAAM;AACfC,MAAAA,KAAK,+CAAwC,MAAKC,KAAL,CAAWC,OAAnD,oBAAL,CACCC,IADD,CACM,UAAAC,QAAQ;AAAA,eAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,OADd;AAED,KAfa;;AAEZ,UAAKJ,KAAL,GAAa;AAAEC,MAAAA,OAAO,EAAC,EAAV;AAAcI,MAAAA,KAAK,EAAC,EAApB;AAAwBC,MAAAA,KAAK,EAAC,EAA9B;AAAkCC,MAAAA,MAAM,EAAC;AAAzC,KAAb;AAFY;AAGb;;;;wCAEmB;AAAA;;AAClBR,MAAAA,KAAK,CAAC,+DAAD,CAAL,CACCG,IADD,CACM,UAAAC,QAAQ;AAAA,eAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,OADd,EAECF,IAFD,CAEM,UAAAM,IAAI;AAAA,eAAI,MAAI,CAACC,QAAL,CAAc;AAAER,UAAAA,OAAO,EAACO,IAAI,CAACP;AAAf,SAAd,CAAJ;AAAA,OAFV,EAGCC,IAHD,CAGM,KAAKQ,QAHX;AAID;;;AAMD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;6BAEW;AACP,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,OAAO,EAAE,KAAKZ,QAAtB;AAAgC,QAAA,SAAS,EAAC,QAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE;AAAS,QAAA,SAAS,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,KAAKE,KAAL,CAAWO,MAAhB,CAHF,EAIE;AAAK,QAAA,SAAS,EAAC,EAAf;AAAkB,QAAA,GAAG,EAAE,KAAKP,KAAL,CAAWK,KAAlC;AAAyC,QAAA,GAAG,EAAC,EAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,CADF;AAQD;;;;EA9DeT,S;;AAiElB,eAAeC,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nclass App extends Component {\nconstructor() {\n  super()\n  this.state = { deck_id:'', image:'', value:'', result:'' }\n}\n\ncomponentDidMount() {     \n  fetch('https://deckofcardsapi.com/api/deck/new/shuffle/?deck_count=1')       \n  .then(response => response.json())       \n  .then(data => this.setState({ deck_id:data.deck_id }))\n  .then(this.drawCard)\n}\n\nupButton = () => {\n  fetch(`https://deckofcardsapi.com/api/deck/${this.state.deck_id}/draw/?count=1`)       \n  .then(response => response.json())\n}\n// drawCard = () => { \n//   fetch(`https://deckofcardsapi.com/api/deck/${this.state.deck_id}/draw/?count=1`)       \n//   .then(response => response.json())       \n//   .then(data => data.cards.map(card => {\n//     switch (card.value) {\n//     case '0': \n//     card.value = '10';\n//     break;\n//     case 'ACE': \n//     card.value = '11';\n//     break;\n//     case 'JACK': \n//     card.value = '12';\n//     break;\n//     case 'QUEEN': \n//     card.value = '13';\n//     break;\n//     case 'KING': \n//     card.value = '14';\n//     break;\n//   } \n//   this.setState({image:card.image, value:card.value})} ))\n// }\n\n// compareCards = (b) => {\n//   var previousCard = this.state.value;\n//   this.drawCard()\n//   if(b === 'up') {\n//     if (previousCard < this.state.value) this.setState({result:'win'})\n//     else (this.setState({result:'lose'}))\n//   } else {\n//     if (previousCard > this.state.value) this.setState({result:'win'})\n//     else (this.setState({result:'lose'}))\n//   }\n// }\n\n  render() {\n    return (\n      <div className=\"App\" >\n        <button onClick={this.upButton} className=\"button\">Up</button>\n        <button  className=\"button\">Down</button>\n        <h1>{this.state.result}</h1> \n        <img className=\"\" src={this.state.image} alt=\"\" />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}