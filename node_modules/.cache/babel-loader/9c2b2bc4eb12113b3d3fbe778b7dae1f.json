{"ast":null,"code":"import _classCallCheck from \"C:\\\\React JS\\\\cards\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\React JS\\\\cards\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\React JS\\\\cards\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\React JS\\\\cards\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\React JS\\\\cards\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\React JS\\\\cards\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      card: {\n        images: {\n          png: 'https://deckofcardsapi.com/static/img/JD.png'\n        },\n        value: '12'\n      },\n      deck_id: null\n    };\n\n    _this.upHandler = function () {\n      axios.get(\"https://deckofcardsapi.com/api/deck/\".concat(_this.state.deck_id, \"/draw/?count=1\")).then(function (res) {\n        var prevCard = _this.state.card.value;\n        res.data.cards.map(function (card) {\n          if (card.value === 0) {\n            card.value = 10;\n          }\n\n          if (card.value === 'ACE') {\n            card.value = 11;\n          }\n\n          if (card.value === 'JACK') {\n            card.value = 12;\n          }\n\n          if (card.value === 'QUEEN') {\n            card.value = 13;\n          }\n\n          if (card.value === 'KING') {\n            card.value = 14;\n          }\n\n          if (prevCard < card.value) {\n            console.log('win');\n          } else console.log('lose');\n\n          _this.setState({\n            card: card\n          });\n\n          console.log(card.value);\n        });\n      }).catch(function (err) {\n        console.log(err);\n      });\n    };\n\n    _this.downHandler = function () {\n      axios.get(\"https://deckofcardsapi.com/api/deck/\".concat(_this.state.deck_id, \"/draw/?count=1\")).then(function (res) {\n        var prevCard = _this.state.card.value;\n        res.data.cards.map(function (card) {\n          if (card.value === 0) {\n            card.value = 10;\n          }\n\n          if (card.value === 'ACE') {\n            card.value = 11;\n          }\n\n          if (card.value === 'JACK') {\n            card.value = 12;\n          }\n\n          if (card.value === 'QUEEN') {\n            card.value = 13;\n          }\n\n          if (card.value === 'KING') {\n            card.value = 14;\n          }\n\n          if (prevCard > card.value) {\n            return document.getElementById(\"result\").InnerHTML = \"Win\";\n            console.log('win');\n          } else {\n            console.log('lose');\n          }\n\n          _this.setState({\n            card: card\n          });\n\n          console.log(card.value);\n        });\n      }).catch(function (err) {\n        console.log(err);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      axios.get('https://deckofcardsapi.com/api/deck/new/shuffle/?deck_count=1').then(function (res) {\n        _this2.setState({\n          deck_id: res.data.deck_id\n        });\n      }).catch(function (err) {\n        console.log(err);\n      });\n    } // clickCard = () => {\n    //   axios.get(`https://deckofcardsapi.com/api/deck/${this.state.deck_id}/draw/?count=1`)\n    //     .then(res => {\n    //       const prevCard = this.state.card.value\n    //       res.data.cards.map(card => {\n    //         if (card.value === 0) { card.value = 10 }\n    //         if (card.value === 'ACE') { card.value = 11 }\n    //         if (card.value === 'JACK') { card.value = 12 }\n    //         if (card.value === 'QUEEN') { card.value = 13 }\n    //         if (card.value === 'KING') { card.value = 14 }\n    //         if (prevCard > card.value) {\n    //           console.log('win')\n    //         } else (\n    //           console.log('lose')\n    //         )\n    //         this.setState({ card: card })\n    //         console.log(card.value)\n    //       })\n    //     })\n    //     .catch(err => {\n    //       console.log(err);\n    //     })\n    // }\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: this.state.card.images.png,\n        alt: this.state.card.value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"button\",\n        onClick: this.upHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"Up\"), React.createElement(\"button\", {\n        className: \"button\",\n        onClick: this.downHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"Down\"), React.createElement(\"h1\", {\n        id: \"result\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, this.state.card.value)));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["C:\\React JS\\cards\\src\\App.js"],"names":["React","Component","axios","App","state","card","images","png","value","deck_id","upHandler","get","then","res","prevCard","data","cards","map","console","log","setState","catch","err","downHandler","document","getElementById","InnerHTML"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,WAAP;;IAEMC,G;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,IAAI,EAAE;AACJC,QAAAA,MAAM,EAAE;AAAEC,UAAAA,GAAG,EAAE;AAAP,SADJ;AAEJC,QAAAA,KAAK,EAAE;AAFH,OADA;AAKNC,MAAAA,OAAO,EAAE;AALH,K;;UA0CRC,S,GAAY,YAAM;AAChBR,MAAAA,KAAK,CAACS,GAAN,+CAAiD,MAAKP,KAAL,CAAWK,OAA5D,qBACGG,IADH,CACQ,UAAAC,GAAG,EAAI;AACX,YAAMC,QAAQ,GAAG,MAAKV,KAAL,CAAWC,IAAX,CAAgBG,KAAjC;AACAK,QAAAA,GAAG,CAACE,IAAJ,CAASC,KAAT,CAAeC,GAAf,CAAmB,UAAAZ,IAAI,EAAI;AACzB,cAAIA,IAAI,CAACG,KAAL,KAAe,CAAnB,EAAsB;AAAEH,YAAAA,IAAI,CAACG,KAAL,GAAa,EAAb;AAAiB;;AACzC,cAAIH,IAAI,CAACG,KAAL,KAAe,KAAnB,EAA0B;AAAEH,YAAAA,IAAI,CAACG,KAAL,GAAa,EAAb;AAAiB;;AAC7C,cAAIH,IAAI,CAACG,KAAL,KAAe,MAAnB,EAA2B;AAAEH,YAAAA,IAAI,CAACG,KAAL,GAAa,EAAb;AAAiB;;AAC9C,cAAIH,IAAI,CAACG,KAAL,KAAe,OAAnB,EAA4B;AAAEH,YAAAA,IAAI,CAACG,KAAL,GAAa,EAAb;AAAiB;;AAC/C,cAAIH,IAAI,CAACG,KAAL,KAAe,MAAnB,EAA2B;AAAEH,YAAAA,IAAI,CAACG,KAAL,GAAa,EAAb;AAAiB;;AAC9C,cAAIM,QAAQ,GAAGT,IAAI,CAACG,KAApB,EAA2B;AACzBU,YAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACD,WAFD,MAGED,OAAO,CAACC,GAAR,CAAY,MAAZ,CADK;;AAGP,gBAAKC,QAAL,CAAc;AAAEf,YAAAA,IAAI,EAAEA;AAAR,WAAd;;AACAa,UAAAA,OAAO,CAACC,GAAR,CAAYd,IAAI,CAACG,KAAjB;AACD,SAbD;AAcD,OAjBH,EAkBGa,KAlBH,CAkBS,UAAAC,GAAG,EAAI;AACZJ,QAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ;AACD,OApBH;AAqBD,K;;UAEDC,W,GAAc,YAAM;AAClBrB,MAAAA,KAAK,CAACS,GAAN,+CAAiD,MAAKP,KAAL,CAAWK,OAA5D,qBACGG,IADH,CACQ,UAAAC,GAAG,EAAI;AACX,YAAMC,QAAQ,GAAG,MAAKV,KAAL,CAAWC,IAAX,CAAgBG,KAAjC;AACAK,QAAAA,GAAG,CAACE,IAAJ,CAASC,KAAT,CAAeC,GAAf,CAAmB,UAAAZ,IAAI,EAAI;AACzB,cAAIA,IAAI,CAACG,KAAL,KAAe,CAAnB,EAAsB;AAAEH,YAAAA,IAAI,CAACG,KAAL,GAAa,EAAb;AAAiB;;AACzC,cAAIH,IAAI,CAACG,KAAL,KAAe,KAAnB,EAA0B;AAAEH,YAAAA,IAAI,CAACG,KAAL,GAAa,EAAb;AAAiB;;AAC7C,cAAIH,IAAI,CAACG,KAAL,KAAe,MAAnB,EAA2B;AAAEH,YAAAA,IAAI,CAACG,KAAL,GAAa,EAAb;AAAiB;;AAC9C,cAAIH,IAAI,CAACG,KAAL,KAAe,OAAnB,EAA4B;AAAEH,YAAAA,IAAI,CAACG,KAAL,GAAa,EAAb;AAAiB;;AAC/C,cAAIH,IAAI,CAACG,KAAL,KAAe,MAAnB,EAA2B;AAAEH,YAAAA,IAAI,CAACG,KAAL,GAAa,EAAb;AAAiB;;AAC9C,cAAIM,QAAQ,GAAGT,IAAI,CAACG,KAApB,EAA2B;AACzB,mBAAOgB,QAAQ,CAACC,cAAT,CAAwB,QAAxB,EAAkCC,SAAlC,GAA8C,KAArD;AACAR,YAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACD,WAHD,MAGO;AAELD,YAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACD;;AACD,gBAAKC,QAAL,CAAc;AAAEf,YAAAA,IAAI,EAAEA;AAAR,WAAd;;AACAa,UAAAA,OAAO,CAACC,GAAR,CAAYd,IAAI,CAACG,KAAjB;AACD,SAfD;AAgBD,OAnBH,EAoBGa,KApBH,CAoBS,UAAAC,GAAG,EAAI;AACZJ,QAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ;AACD,OAtBH;AAuBD,K;;;;;;;wCAlFmB;AAAA;;AAClBpB,MAAAA,KAAK,CAACS,GAAN,CAAU,+DAAV,EACGC,IADH,CACQ,UAAAC,GAAG,EAAI;AACX,QAAA,MAAI,CAACO,QAAL,CAAc;AAAEX,UAAAA,OAAO,EAAEI,GAAG,CAACE,IAAJ,CAASN;AAApB,SAAd;AACD,OAHH,EAIGY,KAJH,CAIS,UAAAC,GAAG,EAAI;AACZJ,QAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ;AACD,OANH;AAOD,K,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;6BAoDS;AACP,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,GAAG,EAAE,KAAKlB,KAAL,CAAWC,IAAX,CAAgBC,MAAhB,CAAuBC,GAAjC;AAAsC,QAAA,GAAG,EAAE,KAAKH,KAAL,CAAWC,IAAX,CAAgBG,KAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,SAAS,EAAC,QAAlB;AAA2B,QAAA,OAAO,EAAE,KAAKE,SAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE;AAAQ,QAAA,SAAS,EAAC,QAAlB;AAA2B,QAAA,OAAO,EAAE,KAAKa,WAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,EAGE;AAAI,QAAA,EAAE,EAAC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAkB,KAAKnB,KAAL,CAAWC,IAAX,CAAgBG,KAAlC,CAHF,CAFF,CADF;AAUD;;;;EAxGeP,S;;AA2GlB,eAAeE,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    card: {\n      images: { png: 'https://deckofcardsapi.com/static/img/JD.png' },\n      value: '12',\n    },\n    deck_id: null\n  }\n\n  componentDidMount() {\n    axios.get('https://deckofcardsapi.com/api/deck/new/shuffle/?deck_count=1')\n      .then(res => {\n        this.setState({ deck_id: res.data.deck_id })\n      })\n      .catch(err => {\n        console.log(err);\n      })\n  }\n\n  // clickCard = () => {\n  //   axios.get(`https://deckofcardsapi.com/api/deck/${this.state.deck_id}/draw/?count=1`)\n  //     .then(res => {\n  //       const prevCard = this.state.card.value\n  //       res.data.cards.map(card => {\n  //         if (card.value === 0) { card.value = 10 }\n  //         if (card.value === 'ACE') { card.value = 11 }\n  //         if (card.value === 'JACK') { card.value = 12 }\n  //         if (card.value === 'QUEEN') { card.value = 13 }\n  //         if (card.value === 'KING') { card.value = 14 }\n  //         if (prevCard > card.value) {\n  //           console.log('win')\n  //         } else (\n  //           console.log('lose')\n  //         )\n  //         this.setState({ card: card })\n  //         console.log(card.value)\n  //       })\n  //     })\n  //     .catch(err => {\n  //       console.log(err);\n  //     })\n  // }\n\n  upHandler = () => {\n    axios.get(`https://deckofcardsapi.com/api/deck/${this.state.deck_id}/draw/?count=1`)\n      .then(res => {\n        const prevCard = this.state.card.value\n        res.data.cards.map(card => {\n          if (card.value === 0) { card.value = 10 }\n          if (card.value === 'ACE') { card.value = 11 }\n          if (card.value === 'JACK') { card.value = 12 }\n          if (card.value === 'QUEEN') { card.value = 13 }\n          if (card.value === 'KING') { card.value = 14 }\n          if (prevCard < card.value) {\n            console.log('win')\n          } else (\n            console.log('lose')\n          )\n          this.setState({ card: card })\n          console.log(card.value)\n        })\n      })\n      .catch(err => {\n        console.log(err);\n      })\n  }\n\n  downHandler = () => {\n    axios.get(`https://deckofcardsapi.com/api/deck/${this.state.deck_id}/draw/?count=1`)\n      .then(res => {\n        const prevCard = this.state.card.value\n        res.data.cards.map(card => {\n          if (card.value === 0) { card.value = 10 }\n          if (card.value === 'ACE') { card.value = 11 }\n          if (card.value === 'JACK') { card.value = 12 }\n          if (card.value === 'QUEEN') { card.value = 13 }\n          if (card.value === 'KING') { card.value = 14 }\n          if (prevCard > card.value) {\n            return(document.getElementById(\"result\").InnerHTML = \"Win\")\n            console.log('win')\n          } else {\n            \n            console.log('lose')\n          }\n          this.setState({ card: card })\n          console.log(card.value)\n        })\n      })\n      .catch(err => {\n        console.log(err);\n      })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <img src={this.state.card.images.png} alt={this.state.card.value}></img>\n        <div>\n          <button className=\"button\" onClick={this.upHandler}>Up</button>\n          <button className=\"button\" onClick={this.downHandler}>Down</button>\n          <h1 id=\"result\" >{this.state.card.value}</h1>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}