{"ast":null,"code":"import _classCallCheck from \"C:\\\\React JS\\\\cards\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\React JS\\\\cards\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\React JS\\\\cards\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\React JS\\\\cards\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\React JS\\\\cards\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\React JS\\\\cards\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n\n    _this.upButton = function () {\n      var prevCard = _this.state.value;\n      fetch(\"https://deckofcardsapi.com/api/deck/\".concat(_this.state.deck_id, \"/draw/?count=1\")).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        return data.cards.map(function (card) {\n          switch (card.value) {\n            case '0':\n              card.value = '10';\n              break;\n\n            case 'ACE':\n              card.value = '11';\n              break;\n\n            case 'JACK':\n              card.value = '12';\n              break;\n\n            case 'QUEEN':\n              card.value = '13';\n              break;\n\n            case 'KING':\n              card.value = '14';\n              break;\n          }\n\n          card.value = parseInt(card.value, 10);\n\n          _this.setState({\n            image: card.image,\n            value: card.value\n          });\n\n          console.log(card.value + ' = ' + _this.state.value);\n\n          if (prevCard < _this.state.value) {\n            console.log('win');\n            document.getElementById(\"winner\").innerHTML = \"Win (\" + prevCard + \" < \" + card.value + \")\";\n          } else if (prevCard == _this.state.value) {\n            console.log('equal');\n            document.getElementById(\"winner\").innerHTML = \"Draw (\" + prevCard + \" = \" + card.value + \")\";\n          } else {\n            console.log('lose');\n            document.getElementById(\"winner\").innerHTML = \"Lose (\" + prevCard + \" < \" + card.value + \")\";\n          }\n        });\n      });\n    };\n\n    _this.downButton = function () {\n      var prevCard = _this.state.value;\n      fetch(\"https://deckofcardsapi.com/api/deck/\".concat(_this.state.deck_id, \"/draw/?count=1\")).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        return data.cards.map(function (card) {\n          switch (card.value) {\n            case '0':\n              card.value = '10';\n              break;\n\n            case 'ACE':\n              card.value = '11';\n              break;\n\n            case 'JACK':\n              card.value = '12';\n              break;\n\n            case 'QUEEN':\n              card.value = '13';\n              break;\n\n            case 'KING':\n              card.value = '14';\n              break;\n          }\n\n          _this.setState({\n            image: card.image,\n            value: card.value\n          });\n\n          console.log(card.value + ' = ' + _this.state.value);\n\n          if (prevCard > _this.state.value) {\n            console.log('win');\n            document.getElementById(\"winner\").innerHTML = \"Win (\" + prevCard + \" > \" + card.value + \")\";\n          } else if (prevCard == _this.state.value) {\n            console.log('equal');\n            document.getElementById(\"winner\").innerHTML = \"Draw (\" + prevCard + \" = \" + card.value + \")\";\n          } else {\n            console.log('lose');\n            document.getElementById(\"winner\").innerHTML = \"Lose (\" + prevCard + \" > \" + card.value + \")\";\n          }\n        });\n      });\n    };\n\n    _this.state = {\n      deck_id: '',\n      image: '',\n      value: '',\n      result: ''\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch('https://deckofcardsapi.com/api/deck/new/shuffle/?deck_count=1').then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        return _this2.setState({\n          deck_id: data.deck_id\n        });\n      }).then(this.upButton).then(this.downButton);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.upButton,\n        className: \"button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"Up\"), React.createElement(\"button\", {\n        onClick: this.downButton,\n        className: \"button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"Down\"), React.createElement(\"h1\", {\n        id: \"winner\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }), React.createElement(\"img\", {\n        className: \"\",\n        src: this.state.image,\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["C:\\React JS\\cards\\src\\App.js"],"names":["React","Component","App","upButton","prevCard","state","value","fetch","deck_id","then","response","json","data","cards","map","card","parseInt","setState","image","console","log","document","getElementById","innerHTML","downButton","result"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nclass App extends Component {\nconstructor() {\n  super()\n  this.state = { deck_id:'', image:'', value:'', result:'' }\n}\n\ncomponentDidMount() {     \n  fetch('https://deckofcardsapi.com/api/deck/new/shuffle/?deck_count=1')       \n  .then(response => response.json())       \n  .then(data => this.setState({ deck_id:data.deck_id }))\n  .then(this.upButton)\n  .then(this.downButton)\n}\n\nupButton = () => { \n  var prevCard = this.state.value;\n  fetch(`https://deckofcardsapi.com/api/deck/${this.state.deck_id}/draw/?count=1`)       \n  .then(response => response.json())       \n  .then(data => data.cards.map(card => {\n    switch (card.value) {\n    case '0': \n    card.value = '10';\n    break;\n    case 'ACE': \n    card.value = '11';\n    break;\n    case 'JACK': \n    card.value = '12';\n    break;\n    case 'QUEEN': \n    card.value = '13';\n    break;\n    case 'KING': \n    card.value = '14';\n    break;\n  }\n  card.value = parseInt(card.value, 10);\n   this.setState({image:card.image, value:card.value})\n    console.log(card.value +' = '+ this.state.value )\n    if (prevCard < this.state.value) {\n      console.log('win')\n      document.getElementById(\"winner\").innerHTML = \"Win (\" + prevCard + \" < \" + card.value + \")\"\n    } else if (prevCard == this.state.value){\n      console.log('equal')\n      document.getElementById(\"winner\").innerHTML = \"Draw (\" + prevCard + \" = \" + card.value + \")\"\n    }\n    else {\n      console.log('lose')\n      document.getElementById(\"winner\").innerHTML = \"Lose (\" + prevCard + \" < \" + card.value + \")\"\n    }\n  })\n  )\n}\n\ndownButton = () => { \n  var prevCard = this.state.value;\n  fetch(`https://deckofcardsapi.com/api/deck/${this.state.deck_id}/draw/?count=1`)       \n  .then(response => response.json())       \n  .then(data => data.cards.map(card => {\n    switch (card.value) {\n    case '0': \n    card.value = '10';\n    break;\n    case 'ACE': \n    card.value = '11';\n    break;\n    case 'JACK': \n    card.value = '12';\n    break;\n    case 'QUEEN': \n    card.value = '13';\n    break;\n    case 'KING': \n    card.value = '14';\n    break;\n  }\n   this.setState({image:card.image, value:card.value})\n    console.log(card.value +' = '+ this.state.value )\n    if (prevCard > this.state.value) {\n      console.log('win')\n      document.getElementById(\"winner\").innerHTML = \"Win (\" + prevCard + \" > \" + card.value + \")\"\n    } else if (prevCard == this.state.value){\n      console.log('equal')\n      document.getElementById(\"winner\").innerHTML = \"Draw (\" + prevCard + \" = \" + card.value + \")\"\n    }\n    else {\n      console.log('lose')\n      document.getElementById(\"winner\").innerHTML = \"Lose (\" + prevCard + \" > \" + card.value + \")\"\n    }\n  })\n  )\n}\n\n  render() {\n    return (\n      <div className=\"App\" >\n        <button onClick={this.upButton} className=\"button\">Up</button>\n        <button onClick={this.downButton} className=\"button\">Down</button>\n        <h1 id=\"winner\"></h1> \n        <img className=\"\" src={this.state.image} alt=\"\" />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}